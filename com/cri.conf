# Chromeos upstart file at /etc/init/cri.conf

pre-start script
  mkdir -p /var/log/pseudonymous/
  echo "CRI start..." >> /var/log/pseudonymous/cri.log 
end script

description     "CRI system startup"
author          "pseudonymous.coders@gmail.com"

start on start-user-session
task

script
  echo "CRI startup is running in 3 seconds" >> /var/log/pseudonymous/cri.log 
  sleep 3
  echo "Testing temp folder..." >> /var/log/pseudonymous/cri.log
  if [ ! -d /home/chronos/user/Downloads/.tmp/ ]; then
    echo "Test failed (Creating folder)" >> /var/log/pseudonymous/cri.log
    sudo mkdir -p /home/chronos/user/Downloads/.tmp/ >> /var/log/pseudonymous/cri.log  
    echo "Done creating folder"
  fi
  if [ -e /home/chronos/user/Downloads/.tmp/REMOVE ]; then
    { echo "Removing CRI..."
    sudo unmount-chroot -afy
    sudo delete-chroot -a -y
    sudo rm -rf /usr/local/*
    sudo rm -rf /home/chronos/user/Downloads/.tmp/
    sudo rm /etc/init/cri.conf
    echo "Done removing"
    } >> /var/log/pseudonymous/cri.log
  else
    if [ -e /home/chronos/user/Downloads/.tmp/REINSTALL ]; then
      { echo "Re installing cri... waiting 20 seconds for internet connection"
      MADEIT=0
      for ((i=0;i<20;i++)); do 
      echo "INTERNET TEST NUM: $20"
      TEST=0
      ping -q -w 1 -c 1 `ip r | grep default | cut -d ' ' -f 3` > /dev/null && TEST=1 || TEST=0   
      if [ "$TEST" -eq "1" ]; then 
          echo "Connection established!"
          MADEIT=1
          break
      else
          echo "Failed trying again"
      fi
      sleep 1 # Wait one second
      done
      if [ "$MADEIT" -eq "1" ]; then
        echo "Made the connection..."
        echo "Deleting the chroot..."
        sudo unmount-chroot -afy
        sudo delete-chroot -a -y
        sudo rm -rf /usr/local/*
        sudo rm -rf /home/chronos/user/Downloads/.tmp/
        printf "Getting vars...\n\n"
        CGLOBS=/home/chronos/user/Downloads/.tmp/globs
        URL="https://raw.githubusercontent.com/Pseudonymous-coders/CRI/master"
        sudo mkdir -p $CGLOBS /home/chronos/user/Downloads/.tmp
        cd $CGLOBS
        sudo wget -q --no-check-certificate "$URL/globs/globvar" -O $CGLOBS/globvar
        sudo wget -q --no-check-certificate "$URL/globs/globfun" -O $CGLOBS/globfun
        sudo chmod 755 *
        source globvar
        source globfun
        echo "Arch: $ARCH"
        sudo mkdir -p $CTEMP $CPKG $CBUILD
        sudo chown $USER:$USER $CTEMP $CPKG $CBUILD
        #sudo mkdir -p $LIB_PATH $CONFIG_PATH $CONFIG_PATH/meta $CRI_DIR $DEST_DIR $PKG_PATH # Create new directories
        #sudo chown -R $USER:$USER $LIB_PATH $CONFIG_PATH $CONFIG_PATH/meta $CRI_DIR $DEST_DIR $PKG_PATH # Change ownership
        PKGURL=$URL/chromelib
        cd $CTEMP
        sudo wget -q --no-check-certificate "$URL/install.sh" -O $CTEMP/install.sh
        sudo chmod 755 install.sh
        sudo mount -o remount,exec /home/chronos/user -i
        sudo wget -q --no-check-certificate "$URL/installLIST.txt" -O $CTEMP/installLIST.txt #This is to download list of files needed
        sudo chmod 755 installLIST.txt #Makes the commands file have every permisson so that anyone can use it 
        NAMES="$(< installLIST.txt)" #names from names.txt file
        LINES=$(lineCount)
        NUMBERS=1
        cd $CPKG
        for NAME in $NAMES; do #Downloads all nessisary files from github to /usr/local/bin
            printf "File $NUMBERS/$LINES...\n\n ${NAME##*/} \n"
            let "NUMBERS += 1"
            sudo wget -q --no-check-certificate "$PKGURL/$NAME" -O $CPKG/${NAME##*/}
            sudo chmod 755 *
            sudo chown $USER:$USER ${NAME##*/}
            ./${NAME##*/} # Run setup in seperate thread 
            fixowner 2&>/dev/null
        done
        wait # Wait for threads to update
        cd $CDOWNLOAD
        sudo wget -q --no-check-certificate "$URL/install2.sh" -O $CDOWNLOAD/install2.sh
        sudo chown $USER:$USER install2.sh
        sudo chmod 755 install2.sh
        sudo rm -rf $CPKG
        sudo rm -rf $CBUILD
        printf "Creating working directories..."
        sudo mkdir -p $CTEMP $CPKG $CBUILD 2&>/dev/null
        sudo chown $USER:$USER $CTEMP $CPKG $CBUILD 2&>/dev/null
        echo "DONE"
        PKGURL="$URL/chrootlib"
        
        cd $CTEMP
        printf "\nDownloading CHROOT files..." 
        { sudo wget -q --no-check-certificate "$URL/install.sh" -O $CTEMP/install.sh
        sudo chmod 755 install.sh
        sudo mount -o remount,exec /home/chronos/user -i
        sudo wget -q --no-check-certificate "$URL/chrootLIST.txt" -O $CTEMP/chrootLIST.txt #This is to download list of files needed
        sudo chmod 755 chrootLIST.txt 
        } >/dev/null 2>&1 #Makes the commands file have every permisson so that anyone can use it 
        echo "DONE"
        
        NAMES="$(< chrootLIST.txt)" #names from names.txt file
        LINES=$(chrootCount)
        NUMBERS=1
        
        cd $CPKG
        LOCKATION=$CROUTON/usr/bin/ # Feed location
        
        for NAME in $NAMES; do #Downloads all nessisary files from github to /usr/local/bin
            
            printf "Welcome to the CRI installer\nCreated By: $AUTHORS\nVersion: $VERSION\nFile $NUMBERS/$LINES...\n\n ${NAME##*/} \n"
            let "NUMBERS += 1"
            echo "Installing ${NAME##*/} 
            "
            installer "$PKGURL/$NAME" "$LOCKATION/${NAME##*/}"
            sudo chmod 755 $LOCKATION/* 2&>/dev/null
            sudo chown $USER:$USER $LOCKATION/${NAME##*/} 2&>/dev/null
            fixowner 2&>/dev/null
            printf "\n\nDONE\n"
            sleep 2
        done
        echo "Done installing chroot files
        Installing new items
        "
        sudo mkdir $CTEMP 2&>/dev/null;
        echo "" > $CTEMP/coms;
        sudo chown $USER:$USER $CTEMP/coms 2&>/dev/null
        echo "Installing icons for file manager..."
        sudo writer "printf 'y\ny\ny\n' % apt-get install dialog thunar gnome-icon-theme-extras gnome-icon-theme-full git"
        sleep 0.5 # Wait for file update
        sudo enter-chroot -u root runner # Run the above multi command
        printf "\n\n\nDone\n\nInstalling mysql...\n"
        sudo writer "printf 'y\ny\n' % apt-get install mysql-client"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "
        Done
        Installing webserver items...
        "
        sudo writer "service apache2 stop 2&>/dev/null+update-rc.d -f apache2 remove 2&>/dev/null+printf 'y\ny\n' % apt-get remove apache2"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Part 2..."
        sudo writer "printf 'y\ny\ny\n' % apt-get install lighttpd+service lighttpd start 2&>/dev/null+service lighttpd force-reload+sudo rm -rf /var/www/index.lighttpd.html"
        sleep 0.5
        sudo enter-chroot -u root runner
        cd $CROUTON/var/www
        sudo git config --global user.email "pseudonymous.coders@gmail.com"
        sudo git config --global user.name "Pseudonymous_Coders"
        sudo git init
        sudo git remote add -f origin "https://github.com/Pseudonymous-coders/CRI.git"
        sudo git config core.sparseCheckout true
        sudo chown -R $USER:$USER ../
        sudo chmod -R 755 ../
        sudo echo "localSite/" >> .git/info/sparse-checkout
        git pull --depth=1 origin master
        sudo rm -rf .git
        sudo mv localSite/* .
        sudo rm -rf localSite
        echo "
        Finished setting up local server, installing webpysock Server..."
        sudo writer "printf 'y\ny\ny\n' % apt-get install python python-dev python-pycurl python-simplejson sqlite3 python-pip build-essential python-tornado"
        sleep 0.5
        sudo enter-chroot -u root runner
        sleep 0.5
        sudo writer "pip install --upgrade pip+pip install --upgrade virtualenv+"
        sleep 0.5
        sudo enter-chroot -u root runner
        # Since we want http://cri/ we need to add them to the hosts
        if [[ ! -z $(grep ' cri' '/etc/hosts') ]];  then echo "cri already in host file"; else sudo su -c "sudo echo '127.0.0.1       cri' >> /etc/hosts"; fi
        if [[ ! -z $(grep ' cri' "$CROUTON/etc/hosts") ]];  then echo "cri already in chroot host file"; else sudo su -c "sudo echo '127.0.0.1       cri' >> $CROUTON/etc/hosts"; fi
        if [[ ! -z $(grep ' cri' '/etc/hosts') ]];  then echo "cri already in host file"; else sudo su -c "echo '127.0.0.1       cri' >> /etc/hosts"; fi
        if [[ ! -z $(grep ' cri' "$CROUTON/etc/hosts") ]];  then echo "cri already in chroot host file"; else sudo su -c "echo '127.0.0.1       cri' >> $CROUTON/etc/hosts"; fi
        #sudo writer 'if '+"[["+' ! -z $(grep "cri" "/etc/hosts") '+"]]"+'+  then echo "cri already in host file"+ else echo "127.0.0.1       cri" >> /etc/hosts"+ fi'
        echo "Installing themes...
        Please wait a bit
        "
        sudo writer "printf 'y\ny\ny\n' % apt-get install software-properties-common python3-software-properties unzip file-roller"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Getting fonts"
        cd $CTEMP
        sudo writer "mkdir -p /usr/share/fonts/truetype/ttf-ubuntu+wget http://font.ubuntu.com/download/ubuntu-font-family-0.83.zip -O ~/font.zip+cd+printf 'A\ny\na\n' % unzip font.zip+cd ubuntu-font-family-0.83+cp -r * /usr/share/fonts/truetype/ttf-ubuntu/"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Configuring i3"
        sudo writer "wget https://raw.githubusercontent.com/Pseudonymous-coders/CRI/master/chrootlib/xiwi.conf -O /etc/crouton/xiwi.conf"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Getting nice looking terminal"
        sudo writer "printf 'y\ny\ny\n' % apt-get install gnome-terminal+gconftool-2 --set /apps/gnome-terminal/profiles/Default/use_system_font --type boolean false+gconftool-2 --set /apps/gnome-terminal/profiles/Default/font --type string \"Ubuntu Mono 14\"+gconftool-2 --set /apps/gnome-terminal/profiles/Default/title --type string CRIterm" # Add gnome terminal
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Updating nice lookin terminal reinit settings"
        sudo writer "gconftool-2 --set /apps/gnome-terminal/profiles/Default/title_mode --type string after"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Please customize your theme!"
        sudo writer "printf '\n\n\n\n' % add-apt-repository ppa:moka/stable+sleep 1+chmod -R 777 /var/+printf '\n\n\n\n' % add-apt-repository ppa:numix/ppa+sleep1+printf 'y\n\n' % apt-get update+printf 'y\ny\ny\n' % apt-get install numix-gtk-theme moka-gtk-theme numix-icon-theme numix-icon-theme-circle moka-icon-theme lxappearance"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Double checking"
        sudo writer "printf 'y\ny\ny\n' % apt-get install numix-gtk-theme moka-gtk-theme numix-icon-theme numix-icon-theme-circle moka-icon-theme lxappearance"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Fixing home environment"
        sudo writer "echo \"export HOME=/root/\" >> /root/.bashrc"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Adding to start up script..."
        sudo writer "wget https://raw.githubusercontent.com/Pseudonymous-coders/CRI/master/chrootlib/cri -O /etc/init.d/cri+chmod 755 /etc/init.d/cri+sleep 0.1+update-rc.d -f cri remove+sleep 1+update-rc.d cri defaults+sudo echo 'PATH=\$PATH:/usr/games/' >> ~/.bashrc"
        sleep 0.5
        sudo enter-chroot -u root runner
        echo "Added cri to the chroot startup"
        sudo writer "wget \"$COMURL/updatecri\" --no-check-certificate -q -O /usr/bin/updatecri > /dev/null 2>&1+chmod 755 -R /usr/bin/updatecri /var/www/ > /dev/null 2>&1+chown root:root -R /usr/bin/updatecri /var/www/ > /dev/null 2>&1"
        echo "Adding update files..."
        if [ ! -d "$UPFOLDER" ]; then sudo mkdir -p $UPFOLDER; fi
        sudo chown -R $USER:$USER $UPFOLDER
        sudo chmod -R 755 $UPFOLDER
        sudo chown $USER:$USER $CFGFILE
        sudo chmod 755 $CFGFILE
        if [ ! -e "$CFGFILE" ]; then
            echo "Continue..."
            sudo su -c "touch $CFGFILE"
            sudo su -c "echo \"VERSION0.0ENDVERSION...NAMEnoneENDNAME...DATE1/1/16ENDDATE\" > $CFGFILE"
            sudo chown $USER:$USER $CFGFILE
            sudo chmod 755 $CFGFILE
            sudo touch $CFGFILE
            sudo echo "VERSION0.0ENDVERSION...NAMEnoneENDNAME...DATE1/1/16ENDDATE" > $CFGFILE
        fi
        sudo echo "$(sudo wget "https://raw.githubusercontent.com/Pseudonymous-coders/CRI/master/globs/cri.cfg" --no-check-certificate -q -O -)" > /home/chronos/user/Downloads/.tmp/cridate/cri.cfg 
        sudo mount -o remount,exec /home/chronos/user -i
        echo "Thanks for installing CRI MATES!"
      fi
      } >> /var/log/pseudonymous/cri.log
    else
      echo "Testing root mounting..." >> /var/log/pseudonymous/cri.log
      
      sudo mkdir /critest 2&>/dev/null
      if [ ! -d /critest ]; then
        sudo touch /home/chronos/user/Downloads/.tmp/NOROOT
        echo "Mount test failed" >> /var/log/pseudonymous/cri.log
      else
        sudo rm /home/chronos/user/Downloads/.tmp/NOROOT
        echo "Mount test passed" >> /var/log/pseudonymous/cri.log
      fi
      sudo rm -rf /critest 2&>/dev/null
     
      sudo writer "chmod 755 -R /etc/init.d/cri/+etc/init.d/cri start"
      sudo enter-chroot -u root runner >> /var/log/pseudonymous/cri.log 2>&1 &
      sudo mount -o remount,exec /home/chronos/user -i
      rootmount 2>&1 & # Remount system as read and write
    fi
  fi
end script
